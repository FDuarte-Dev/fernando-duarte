{"version":3,"sources":["redux/reducer.ts","redux/store.ts","modules/Header/components/HeaderNavBar.tsx","modules/Header/manager/components/HeaderManager.jsx","utils/services.ts","modules/Page/services/GitHubServices.ts","modules/Page/components/pages/LoadingPage.tsx","modules/Page/components/pages/HomePage.tsx","modules/Page/components/pages/AcademicPage.tsx","modules/Page/components/pages/WorkExperiencePage.tsx","modules/Page/components/cards/LoadingCard.tsx","modules/Page/components/cards/RepoCard.tsx","modules/Page/components/pages/ProjectsPage.tsx","modules/Page/components/cards/ApplicationCard.tsx","modules/Page/components/pages/ApplicationsPage.tsx","modules/Page/components/pages/ContactsPage.tsx","modules/Page/components/pages/NotFoundPage.tsx","modules/Page/manager/components/PageManager.tsx","modules/Footer/components/FooterNavBar.jsx","modules/Footer/manager/components/FooterManager.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","page","store","createStore","state","action","type","HeaderNavBar","changePage","e","preventDefault","dispatch","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","onClick","this","React","Component","HeaderManagerComp","HeaderManager","connect","axios","create","baseURL","process","REACT_APP_HOST_WS_PATH","responseType","interceptors","response","use","Promise","resolve","error","console","message","reject","GitHubApiHttpClient","GitHubServices","getUser","username","callback","get","then","catch","getUserRepositories","getRepoLanguages","fullName","LoadingPage","HomePage","props","user","login","avatar_url","loading","GITHUB_USERNAME","res","err","status","setState","data","forceUpdate","src","alt","AcademicPage","WorkExperiencePage","LoadingCard","RepoCard","languages","repository","full_name","langs","lang","push","name","description","html_url","Card","style","flex","width","Body","Title","Text","join","Button","variant","ProjectsPage","repos","CardDeck","display","flexDirection","alignItems","map","repo","ApplicationCard","ApplicationsPage","ContactsPage","NotFoundPage","PageManagerComp","Page","getCurrentPage","PageManager","FooterNavBar","color","dark","fixed","Container","Date","getFullYear","icon","faGithubSquare","size","faLinkedin","FooterManagerComp","FooterManager","App","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.1f3aa098.chunk.js","sourcesContent":["export interface State {\r\n    page: string;\r\n}\r\n\r\nconst initialState: State = {\r\n    page: 'home'\r\n}\r\n\r\nexport const reducer = function (state = initialState, action: {type: string, page: string}) {\r\n    switch (action.type) {\r\n        case \"CHANGE_PAGE\":\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore } from 'redux';\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer);\r\n","import React from 'react';\r\nimport { store } from '../../../redux/store';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default class HeaderNavBar extends React.Component {\r\n    changePage = (page: string) => (e: any) => {\r\n        e.preventDefault();\r\n        store.dispatch({type: 'CHANGE_PAGE', page: page});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\" >\r\n            <Navbar.Brand href=\"#home\">Fernando Duarte</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link onClick={this.changePage('home')} >Home</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('academic')}>Academic</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('work-experience')}>Work Experience</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('projects')}>Projects</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('applications')}>Applications</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('contacts')}>Contacts</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HeaderNavBar from '../../components/HeaderNavBar'\r\n\r\nclass HeaderManagerComp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HeaderNavBar />\r\n        )\r\n    }\r\n}\r\n\r\nexport const HeaderManager = connect()(HeaderManagerComp);","import axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\nexport const ApiHttpClient = axios.create({\r\n    baseURL: process.env.REACT_APP_HOST_WS_PATH,\r\n    responseType: 'json'\r\n});\r\n\r\nApiHttpClient.interceptors.response.use(\r\n    (response: AxiosResponse) => {\r\n        return Promise.resolve(response);\r\n    },\r\n    (error: AxiosError) => {\r\n        console.error(error.message);\r\n        return Promise.reject({ ...error });\r\n    }\r\n);\r\n\r\n\r\nexport const GitHubApiHttpClient = axios.create({\r\n    baseURL: 'https://api.github.com',\r\n    responseType: 'json'\r\n});\r\n\r\nGitHubApiHttpClient.interceptors.response.use(\r\n    (response: AxiosResponse) => {\r\n        return Promise.resolve(response);\r\n    },\r\n    (error: AxiosError) => {\r\n        console.error(error.message);\r\n        return Promise.reject({ ...error });\r\n    }\r\n);\r\n","import { AxiosResponse, AxiosError } from 'axios';\r\nimport { GitHubApiHttpClient } from '../../../utils/services';\r\n\r\nfunction getUser(username: any, callback: (arg: any, err: any) => void) {\r\n  GitHubApiHttpClient.get(`/users/${username}`)\r\n    .then((response: AxiosResponse) => {\r\n      if (callback) {\r\n        callback(response, null);\r\n      }\r\n    })\r\n    .catch((error: AxiosError) => {\r\n      if (callback) {\r\n        callback(null, error);\r\n      }\r\n    });\r\n}\r\n\r\nfunction getUserRepositories(username: string, callback: (arg: any, err: any) => void) {\r\n  GitHubApiHttpClient.get(`/users/${username}/repos`)\r\n  .then((response: AxiosResponse) => {\r\n    if (callback) {\r\n      callback(response, null);\r\n    }\r\n  })\r\n  .catch((error: AxiosError) => {\r\n    if (callback) {\r\n      callback(null, error);\r\n    }\r\n  })\r\n}\r\n\r\nfunction getRepoLanguages(fullName: string, callback: (arg: any, err: any) => void) {\r\n  GitHubApiHttpClient.get(`/repos/${fullName}/languages`)\r\n  .then((response: AxiosResponse) => {\r\n    if (callback) {\r\n      callback(response, null);\r\n    }\r\n  })\r\n  .catch((error: AxiosError) => {\r\n    if (callback) {\r\n      callback(null, error);\r\n    }\r\n  })\r\n}\r\n\r\nexport const GitHubServices = {\r\n    getUser,\r\n    getUserRepositories,\r\n    getRepoLanguages\r\n}","import React from 'react';\r\n\r\nexport default class LoadingPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Loading</h1>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { GITHUB_USERNAME } from '../../../../utils/constants';\r\nimport { GitHubUser } from '../../model/model';\r\nimport { GitHubServices } from '../../services/GitHubServices';\r\nimport LoadingPage from './LoadingPage';\r\n\r\ninterface HomePageProps {\r\n\r\n}\r\n\r\ninterface HomePageState {\r\n    user: GitHubUser;\r\n    loading: boolean;\r\n}\r\n\r\nexport default class HomePage extends React.Component<HomePageProps, HomePageState> {\r\n\r\n    constructor(props: HomePageProps) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                login: '',\r\n                avatar_url: '',\r\n            },\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const USERNAME = GITHUB_USERNAME;\r\n\r\n        GitHubServices.getUser(USERNAME, (res: any, err:any) => {\r\n            if (res && res.status === 200) {\r\n                this.setState({user: res.data, loading: false});\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { user, loading } = this.state;\r\n        return (\r\n            <>\r\n            {loading && <LoadingPage />}\r\n            {!loading &&\r\n                <>\r\n                    <h1>{user.login}</h1>\r\n                    <img src={user.avatar_url} alt='user' />\r\n                </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class AcademicPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1>Academic Page Component</h1>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class WorkExperiencePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1>Work Experience Page Component</h1>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class LoadingCard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Loading Card</h1>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { GitHubServices } from '../../services/GitHubServices';\r\nimport { GitHubRepo } from '../../model/model';\r\nimport LoadingCard from './LoadingCard';\r\n\r\ninterface RepoCardProps {\r\n    repository: GitHubRepo\r\n}\r\n\r\ninterface RepoCardState {\r\n    languages: any[];\r\n    loading: boolean;\r\n}\r\n\r\nexport default class RepoCard extends React.Component<RepoCardProps, RepoCardState> {\r\n\r\n    constructor(props: RepoCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            languages: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        GitHubServices.getRepoLanguages(this.props.repository.full_name, (res: any, err: any) => {\r\n            if (res && res.status === 200) { \r\n                let langs = []\r\n                for(var lang in res.data){\r\n                    langs.push(lang);\r\n                }\r\n                this.setState({languages: langs, loading: false});\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        let { languages, loading } = this.state;\r\n        let { name, description, html_url } = this.props.repository;\r\n        return (\r\n            <>\r\n            {loading && <LoadingCard />}\r\n            {!loading &&\r\n                <Card style={{flex: 1, width: '80%'}}>\r\n                    <Card.Body>\r\n                        <Card.Title>{name}</Card.Title>\r\n                        <Card.Text>{description}</Card.Text>\r\n                        <Card.Text>{languages.join(', ')}</Card.Text>\r\n                        <Button variant=\"primary\" href={html_url}>Visit</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            }  \r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { GITHUB_USERNAME } from '../../../../utils/constants';\r\nimport RepoCard from '../cards/RepoCard';\r\nimport { GitHubRepo } from '../../model/model';\r\nimport { GitHubServices } from '../../services/GitHubServices';\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport LoadingPage from './LoadingPage';\r\n\r\ninterface ProjectsPageProps {\r\n\r\n}\r\n\r\ninterface ProjectsPageState {\r\n    repos: GitHubRepo[];\r\n    loading: boolean;\r\n}\r\n\r\nexport default class ProjectsPage extends React.Component<ProjectsPageProps, ProjectsPageState> {\r\n    constructor(props: ProjectsPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            repos: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const USERNAME = GITHUB_USERNAME;\r\n\r\n        GitHubServices.getUserRepositories(USERNAME, (res: any, err: any) => {\r\n            if (res && res.status === 200) {\r\n                this.setState({repos: res.data, loading: false});\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        let {repos, loading} = this.state;\r\n        return (\r\n            <>\r\n            {loading && <LoadingPage />}\r\n            {!loading &&\r\n                <>\r\n                    <CardDeck style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                        {repos.map((repo) => {\r\n                            return <RepoCard repository={repo}/>\r\n                        })}\r\n                    </CardDeck>\r\n                </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nexport default class ApplicationCard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Card style={{flex: 1, width: '80%'}}>\r\n                    <Card.Body>\r\n                        <Card.Title>Application</Card.Title>\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport LoadingPage from './LoadingPage';\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport ApplicationCard from '../cards/ApplicationCard';\r\n\r\ninterface ApplicationsPageProps {\r\n\r\n}\r\n\r\ninterface ApplicationsPageState {\r\n    \r\n    loading: boolean;\r\n}\r\n\r\nexport default class ApplicationsPage extends React.Component<ApplicationsPageProps, ApplicationsPageState> {\r\n    constructor(props: ApplicationsPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Applications</h1>\r\n                <CardDeck style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {/* {repos.map(({full_name, name, description, html_url}) => {\r\n                        return <RepoCard full_name={full_name} name={name} description={description} html_url={html_url}/>\r\n                    })} */}\r\n                    <ApplicationCard />\r\n                </CardDeck>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ContactsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1>Contacts Page Component</h1>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class NotFoundPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <h1>Not Found Page Component</h1>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { State } from '../../../../redux/reducer';\r\nimport HomePage from '../../components/pages/HomePage';\r\nimport AcademicPage from '../../components/pages/AcademicPage';\r\nimport WorkExperiencePage from '../../components/pages/WorkExperiencePage';\r\nimport ProjectsPage from '../../components/pages/ProjectsPage';\r\nimport ApplicationsPage from '../../components/pages/ApplicationsPage';\r\nimport ContactsPage from '../../components/pages/ContactsPage';\r\nimport NotFoundPage from '../../components/pages/NotFoundPage';\r\n\r\ninterface PageManagerProps {\r\n    page: string\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        page: state.page\r\n    };\r\n}\r\n\r\n\r\nclass PageManagerComp extends React.Component<PageManagerProps> {\r\n\r\n    getCurrentPage(page: string) {\r\n        switch (page) {\r\n            case 'home':\r\n                return HomePage;\r\n            case 'academic':\r\n                return AcademicPage;\r\n            case 'work-experience':\r\n                return WorkExperiencePage;\r\n            case 'projects':\r\n                return ProjectsPage;\r\n            case 'applications':\r\n                return ApplicationsPage;\r\n            case 'contacts':\r\n                return ContactsPage;\r\n            default:\r\n                return NotFoundPage;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let Page = this.getCurrentPage(this.props.page);\r\n        return (\r\n            <div>\r\n                <Page />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const PageManager = connect(mapStateToProps)(PageManagerComp);","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default class FooterNavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar color=\"dark\" dark fixed=\"bottom\">\r\n                <Container>\r\n                    <Nav className=\"mr-auto\" >\r\n                        <Nav >FDuarte-Dev @ {new Date().getFullYear()}</Nav>\r\n                        <Nav >\r\n                            <div>\r\n                                <a href=\"https://github.com/FDuarte-Dev\">\r\n                                    <FontAwesomeIcon icon={faGithubSquare} size=\"2x\" />\r\n                                </a>\r\n                                <a href=\"https://www.linkedin.com/in/fernando-guerra-duarte/\">\r\n                                    <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n                                </a>\r\n                            </div>\r\n                        </Nav>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FooterNavBar from '../../components/FooterNavBar'\r\n\r\nclass FooterManagerComp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <FooterNavBar />\r\n        )\r\n    }\r\n}\r\n\r\nexport const FooterManager = connect()(FooterManagerComp);","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HeaderManager from './modules/Header/manager/index';\nimport PageManager from './modules/Page/manager/index';\nimport FooterManager from './modules/Footer/manager/index';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <HeaderManager />\n      <PageManager />\n      <FooterManager />\n    </div>\n  </Provider>\n);\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}