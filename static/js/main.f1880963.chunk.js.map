{"version":3,"sources":["redux/reducer.ts","redux/store.ts","modules/Header/components/HeaderNavBar.tsx","modules/Header/manager/components/HeaderManager.jsx","utils/constants.ts","utils/services.ts","modules/Page/components/home/services/GitHubServices.ts","modules/Page/components/academic/models/model.ts","modules/Page/components/loading/pages/LoadingPage.tsx","modules/Page/components/home/pages/HomePage.tsx","modules/Page/components/academic/cards/DegreeCard.tsx","modules/Page/components/academic/items/degreesList.ts","modules/Page/components/academic/pages/AcademicPage.tsx","modules/Page/components/workexperience/pages/WorkExperiencePage.tsx","modules/Page/components/projects/services/GitHubServices.ts","modules/Page/components/loading/cards/LoadingCard.tsx","modules/Page/components/projects/cards/RepoCard.tsx","modules/Page/components/projects/pages/ProjectsPage.tsx","modules/Page/components/applications/cards/ApplicationCard.tsx","modules/Page/components/applications/items/applicationsList.ts","modules/Page/components/applications/pages/ApplicationsPage.tsx","modules/Page/components/contacts/pages/ContactsPage.tsx","modules/Page/components/notfound/pages/NotFoundPage.tsx","modules/Page/manager/components/PageManager.tsx","modules/Footer/components/FooterNavBar.jsx","modules/Footer/manager/components/FooterManager.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","page","store","createStore","state","action","type","HeaderNavBar","changePage","e","preventDefault","dispatch","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","onClick","this","React","Component","HeaderManagerComp","HeaderManager","connect","CALCULADORA_VOCAL_ICON","process","DECISION_MAKER_ICON","MORSE_TRANSLATOR_ICON","axios","create","baseURL","REACT_APP_HOST_WS_PATH","responseType","interceptors","response","use","Promise","resolve","error","console","message","reject","GitHubApiHttpClient","EducationLevelEnum","GitHubServices","getUser","username","callback","get","then","catch","LoadingPage","HomePage","props","user","login","avatar_url","loading","GITHUB_USERNAME","res","err","status","setState","data","forceUpdate","src","alt","DegreeCard","degree","field","level","institution","location","startDate","endDate","curriculum","Card","style","flex","width","Body","Title","toString","Text","Button","variant","ACADEMIC","BACHELOR","Date","toLocaleDateString","name","ects","projects","description","AcademicPage","degrees","CardDeck","display","flexDirection","alignItems","map","WorkExperiencePage","getUserRepositories","getRepoLanguages","fullName","LoadingCard","RepoCard","languages","repository","full_name","langs","lang","push","html_url","join","ProjectsPage","repos","repo","ApplicationCard","application","icon","Img","APPS","ApplicationsPage","applications","ContactsPage","NotFoundPage","PageManagerComp","Page","getCurrentPage","PageManager","FooterNavBar","color","fixed","Container","getFullYear","faGithubSquare","size","faLinkedin","FooterManagerComp","FooterManager","App","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.f1880963.chunk.js","sourcesContent":["export interface State {\r\n    page: string;\r\n}\r\n\r\nconst initialState: State = {\r\n    page: 'home'\r\n}\r\n\r\nexport const reducer = function (state = initialState, action: {type: string, page: string}) {\r\n    switch (action.type) {\r\n        case \"CHANGE_PAGE\":\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore } from 'redux';\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer);\r\n","import React from 'react';\r\nimport { store } from '../../../redux/store';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default class HeaderNavBar extends React.Component {\r\n    changePage = (page: string) => (e: any) => {\r\n        e.preventDefault();\r\n        store.dispatch({type: 'CHANGE_PAGE', page: page});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\" >\r\n            <Navbar.Brand href=\"#home\">Fernando Duarte</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link onClick={this.changePage('home')} >Home</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('academic')}>Academic</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('work-experience')}>Work Experience</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('projects')}>Projects</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('applications')}>Applications</Nav.Link>\r\n                <Nav.Link onClick={this.changePage('contacts')}>Contacts</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HeaderNavBar from '../../components/HeaderNavBar'\r\n\r\nclass HeaderManagerComp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HeaderNavBar />\r\n        )\r\n    }\r\n}\r\n\r\nexport const HeaderManager = connect()(HeaderManagerComp);","// GitHub\r\nexport const GITHUB_USERNAME = 'FDuarte-Dev';\r\n\r\n// Icons\r\nexport const CALCULADORA_VOCAL_ICON = `${process.env.PUBLIC_URL}/assets/images/CalculadoraVocalLogo.PNG`;\r\nexport const DECISION_MAKER_ICON = `${process.env.PUBLIC_URL}/assets/images/DecisionMakerLogo.png`;\r\nexport const MORSE_TRANSLATOR_ICON = `${process.env.PUBLIC_URL}/assets/images/MorseTranslatorLogo.png`;","import axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\nexport const ApiHttpClient = axios.create({\r\n    baseURL: process.env.REACT_APP_HOST_WS_PATH,\r\n    responseType: 'json'\r\n});\r\n\r\nApiHttpClient.interceptors.response.use(\r\n    (response: AxiosResponse) => {\r\n        return Promise.resolve(response);\r\n    },\r\n    (error: AxiosError) => {\r\n        console.error(error.message);\r\n        return Promise.reject({ ...error });\r\n    }\r\n);\r\n\r\n\r\nexport const GitHubApiHttpClient = axios.create({\r\n    baseURL: 'https://api.github.com',\r\n    responseType: 'json'\r\n});\r\n\r\nGitHubApiHttpClient.interceptors.response.use(\r\n    (response: AxiosResponse) => {\r\n        return Promise.resolve(response);\r\n    },\r\n    (error: AxiosError) => {\r\n        console.error(error.message);\r\n        return Promise.reject({ ...error });\r\n    }\r\n);\r\n","import { AxiosResponse, AxiosError } from 'axios';\r\nimport { GitHubApiHttpClient } from '../../../../../utils/services';\r\n\r\nfunction getUser(username: any, callback: (arg: any, err: any) => void) {\r\n  GitHubApiHttpClient.get(`/users/${username}`)\r\n    .then((response: AxiosResponse) => {\r\n      if (callback) {\r\n        callback(response, null);\r\n      }\r\n    })\r\n    .catch((error: AxiosError) => {\r\n      if (callback) {\r\n        callback(null, error);\r\n      }\r\n    });\r\n}\r\n\r\nexport const GitHubServices = {\r\n    getUser\r\n}","export interface Degree {\r\n    field: string;\r\n    level: EducationLevelEnum;\r\n    institution: string;\r\n    location: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    curriculum: Discipline[];\r\n}\r\n\r\nexport interface Discipline {\r\n    name: string;\r\n    ects: number;\r\n    projects: Project[];\r\n}\r\n\r\nexport interface Project {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum EducationLevelEnum {\r\n    BACHELOR = 'Bachelor\\'s degree',\r\n    MASTERS = 'Master\\'s degree',\r\n    DOCTORATE = 'PhD'\r\n}","import React from 'react';\r\n\r\nexport default class LoadingPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Loading</h1>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { GITHUB_USERNAME } from '../../../../../utils/constants';\r\nimport { GitHubUser } from '../models/model';\r\nimport { GitHubServices } from '../services/GitHubServices';\r\nimport LoadingPage from '../../loading/pages/LoadingPage';\r\n\r\ninterface HomePageProps {\r\n\r\n}\r\n\r\ninterface HomePageState {\r\n    user: GitHubUser;\r\n    loading: boolean;\r\n}\r\n\r\nexport default class HomePage extends React.Component<HomePageProps, HomePageState> {\r\n\r\n    constructor(props: HomePageProps) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                login: '',\r\n                avatar_url: '',\r\n            },\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const USERNAME = GITHUB_USERNAME;\r\n\r\n        GitHubServices.getUser(USERNAME, (res: any, err:any) => {\r\n            if (res && res.status === 200) {\r\n                this.setState({user: res.data, loading: false});\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { user, loading } = this.state;\r\n        return (\r\n            <>\r\n            {loading && <LoadingPage />}\r\n            {!loading &&\r\n                <>\r\n                    <h1>{user.login}</h1>\r\n                    <img src={user.avatar_url} alt='user' />\r\n                </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Card, Modal } from \"react-bootstrap\";\r\nimport { Degree } from \"../models/model\";\r\n\r\ninterface DegreeCardProps {\r\n    degree: Degree;\r\n}\r\n\r\ninterface DegreeCardState {}\r\n\r\nexport default class DegreeCard extends React.Component<DegreeCardProps, DegreeCardState> {\r\n\r\n    render() {\r\n        let {\r\n            field,\r\n            level,\r\n            institution,\r\n            location,\r\n            startDate,\r\n            endDate,\r\n            curriculum,\r\n        } = this.props.degree;\r\n        return (\r\n            <>\r\n                <Card style={{ flex: 1, width: \"80%\" }}>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            {level.toString()}  in {field}\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {institution} | {location}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            {startDate} - {endDate}\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\" onClick={() => {}}>\r\n                            Curriculum\r\n                        </Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { Degree, EducationLevelEnum } from '../models/model';\r\n\r\nexport const ACADEMIC: Degree[] = [\r\n    {\r\n        field: 'Computer Science and Engineering',\r\n        institution: 'Instituto Superior Técnico',\r\n        location: 'Lisbon - Portugal',\r\n        level: EducationLevelEnum.BACHELOR,\r\n        startDate: new Date('2014-09-09').toLocaleDateString(),\r\n        endDate: new Date('2018-07-10').toLocaleDateString(),\r\n        curriculum: [\r\n            {\r\n                name: 'Fundamentos da Programação',\r\n                ects: 7.5,\r\n                projects: [\r\n                    {\r\n                        name: 'Credit card generator',\r\n                        description: 'Create a card generator.'\r\n                    },\r\n                    {\r\n                        name: '2048 Game',\r\n                        description: 'Create a version of the game 2048.'\r\n                    }\r\n                ]\r\n            }\r\n            // TODO: Add remaining information\r\n        ]\r\n    }\r\n]","import React from 'react';\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport DegreeCard from '../cards/DegreeCard';\r\nimport { Degree } from '../models/model';\r\nimport { ACADEMIC } from '../items/degreesList';\r\n\r\ninterface AcademicPageProps {\r\n\r\n}\r\n\r\ninterface AcademicPageState {\r\n    degrees: Degree[];\r\n}\r\n\r\nexport default class AcademicPage extends React.Component<AcademicPageProps, AcademicPageState> {\r\n    constructor(props: AcademicPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            degrees: ACADEMIC\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { degrees } = this.state;\r\n        return (\r\n            <>\r\n            <CardDeck style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                {degrees.map((degree) => {\r\n                    return <DegreeCard degree={degree}/>\r\n                })}\r\n            </CardDeck>\r\n        </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class WorkExperiencePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1>Work Experience Page Component</h1>\r\n        );\r\n    }\r\n}\r\n","import { AxiosResponse, AxiosError } from 'axios';\r\nimport { GitHubApiHttpClient } from '../../../../../utils/services';\r\n\r\nfunction getUserRepositories(username: string, callback: (arg: any, err: any) => void) {\r\n  GitHubApiHttpClient.get(`/users/${username}/repos`)\r\n  .then((response: AxiosResponse) => {\r\n    if (callback) {\r\n      callback(response, null);\r\n    }\r\n  })\r\n  .catch((error: AxiosError) => {\r\n    if (callback) {\r\n      callback(null, error);\r\n    }\r\n  })\r\n}\r\n\r\nfunction getRepoLanguages(fullName: string, callback: (arg: any, err: any) => void) {\r\n  GitHubApiHttpClient.get(`/repos/${fullName}/languages`)\r\n  .then((response: AxiosResponse) => {\r\n    if (callback) {\r\n      callback(response, null);\r\n    }\r\n  })\r\n  .catch((error: AxiosError) => {\r\n    if (callback) {\r\n      callback(null, error);\r\n    }\r\n  })\r\n}\r\n\r\nexport const GitHubServices = {\r\n    getUserRepositories,\r\n    getRepoLanguages\r\n}","import React from 'react';\r\n\r\nexport default class LoadingCard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Loading Card</h1>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { GitHubServices } from '../services/GitHubServices';\r\nimport { GitHubRepo } from '../models/model';\r\nimport LoadingCard from '../../loading/cards/LoadingCard';\r\n\r\ninterface RepoCardProps {\r\n    repository: GitHubRepo\r\n}\r\n\r\ninterface RepoCardState {\r\n    languages: any[];\r\n    loading: boolean;\r\n}\r\n\r\nexport default class RepoCard extends React.Component<RepoCardProps, RepoCardState> {\r\n\r\n    constructor(props: RepoCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            languages: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        GitHubServices.getRepoLanguages(this.props.repository.full_name, (res: any, err: any) => {\r\n            if (res && res.status === 200) { \r\n                let langs = []\r\n                for(var lang in res.data){\r\n                    langs.push(lang);\r\n                }\r\n                this.setState({languages: langs, loading: false});\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        let { languages, loading } = this.state;\r\n        let { name, description, html_url } = this.props.repository;\r\n        return (\r\n            <>\r\n            {loading && <LoadingCard />}\r\n            {!loading &&\r\n                <Card style={{flex: 1, width: '80%'}}>\r\n                    <Card.Body>\r\n                        <Card.Title>{name}</Card.Title>\r\n                        <Card.Text>{description}</Card.Text>\r\n                        <Card.Text>{languages.join(', ')}</Card.Text>\r\n                        <Button variant=\"primary\" href={html_url}>Visit</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            }  \r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { GITHUB_USERNAME } from '../../../../../utils/constants';\r\nimport RepoCard from '../cards/RepoCard';\r\nimport { GitHubRepo } from '../models/model';\r\nimport { GitHubServices } from '../services/GitHubServices';\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport LoadingPage from '../../loading/pages/LoadingPage';\r\n\r\ninterface ProjectsPageProps {\r\n\r\n}\r\n\r\ninterface ProjectsPageState {\r\n    repos: GitHubRepo[];\r\n    loading: boolean;\r\n}\r\n\r\nexport default class ProjectsPage extends React.Component<ProjectsPageProps, ProjectsPageState> {\r\n    constructor(props: ProjectsPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            repos: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const USERNAME = GITHUB_USERNAME;\r\n\r\n        GitHubServices.getUserRepositories(USERNAME, (res: any, err: any) => {\r\n            if (res && res.status === 200) {\r\n                this.setState({repos: res.data, loading: false});\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        let {repos, loading} = this.state;\r\n        return (\r\n            <>\r\n            {loading && <LoadingPage />}\r\n            {!loading &&\r\n                <>\r\n                    <CardDeck style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                        {repos.map((repo) => {\r\n                            return <RepoCard repository={repo}/>\r\n                        })}\r\n                    </CardDeck>\r\n                </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Application } from '../models/model';\r\n\r\ninterface ApplicationCardProps{\r\n    application: Application\r\n}\r\n\r\ninterface ApplicationCardState {}\r\n\r\nexport default class ApplicationCard extends React.Component<ApplicationCardProps, ApplicationCardState> {\r\n\r\n    render() {\r\n        let { name, description, html_url, icon } = this.props.application;\r\n        return (\r\n            <>\r\n                <Card style={{flex: 1, width: '80%'}}>\r\n                    <Card.Body>\r\n                        <Card.Title>{name}</Card.Title>\r\n                        <Card.Text>{description}</Card.Text>\r\n                        <Card.Img variant=\"top\" src={icon} />\r\n                        <Button variant=\"primary\" href={html_url}>Visit</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        );\r\n    }\r\n}","import { Application } from '../models/model';\r\nimport { CALCULADORA_VOCAL_ICON, \r\n         DECISION_MAKER_ICON, \r\n         MORSE_TRANSLATOR_ICON } from '../../../../../utils/constants';\r\n\r\nexport const APPS: Application[] = [\r\n    {\r\n        name: 'Calculadora vocal',\r\n        description: 'Voice controled calculator in portuguese',\r\n        html_url: 'https://play.google.com/store/apps/details?id=fduarte.appz.calculadoravocal',\r\n        icon: CALCULADORA_VOCAL_ICON\r\n    },\r\n    {\r\n        name: 'Decision Maker',\r\n        description: 'Application to randomly choose from a pool of choices',\r\n        html_url: 'https://play.google.com/store/apps/details?id=fduarte.appz',\r\n        icon: DECISION_MAKER_ICON\r\n    },\r\n    {\r\n        name: 'Morse Translator',\r\n        description: 'Application to translate text to morse code with sound or light alerts',\r\n        html_url: 'https://play.google.com/store/apps/details?id=fduarte.appz.morsetranslator',\r\n        icon: MORSE_TRANSLATOR_ICON\r\n    }\r\n]","import React from 'react';\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport ApplicationCard from '../cards/ApplicationCard';\r\nimport { Application } from '../models/model';\r\nimport { APPS } from '../items/applicationsList';\r\n\r\ninterface ApplicationsPageProps {\r\n\r\n}\r\n\r\ninterface ApplicationsPageState {\r\n    applications: Application[];\r\n}\r\n\r\nexport default class ApplicationsPage extends React.Component<ApplicationsPageProps, ApplicationsPageState> {\r\n    constructor(props: ApplicationsPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            applications: APPS\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { applications } = this.state;\r\n        return (\r\n            <>\r\n                <CardDeck style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {applications.map((application) => {\r\n                        return <ApplicationCard application={application}/>\r\n                    })}\r\n                </CardDeck>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ContactsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1>Contacts Page Component</h1>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class NotFoundPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <h1>Not Found Page Component</h1>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { State } from '../../../../redux/reducer';\r\nimport HomePage from '../../components/home/pages/HomePage';\r\nimport AcademicPage from '../../components/academic/pages/AcademicPage';\r\nimport WorkExperiencePage from '../../components/workexperience/pages/WorkExperiencePage';\r\nimport ProjectsPage from '../../components/projects/pages/ProjectsPage';\r\nimport ApplicationsPage from '../../components/applications/pages/ApplicationsPage';\r\nimport ContactsPage from '../../components/contacts/pages/ContactsPage';\r\nimport NotFoundPage from '../../components/notfound/pages/NotFoundPage';\r\n\r\ninterface PageManagerProps {\r\n    page: string\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    return {\r\n        page: state.page\r\n    };\r\n}\r\n\r\n\r\nclass PageManagerComp extends React.Component<PageManagerProps> {\r\n\r\n    getCurrentPage(page: string) {\r\n        switch (page) {\r\n            case 'home':\r\n                return HomePage;\r\n            case 'academic':\r\n                return AcademicPage;\r\n            case 'work-experience':\r\n                return WorkExperiencePage;\r\n            case 'projects':\r\n                return ProjectsPage;\r\n            case 'applications':\r\n                return ApplicationsPage;\r\n            case 'contacts':\r\n                return ContactsPage;\r\n            default:\r\n                return NotFoundPage;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let Page = this.getCurrentPage(this.props.page);\r\n        return (\r\n            <div>\r\n                <Page />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const PageManager = connect(mapStateToProps)(PageManagerComp);","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default class FooterNavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar color=\"dark\" fixed=\"bottom\">\r\n                <Container>\r\n                    <Nav className=\"mr-auto\" >\r\n                        <Nav >FDuarte-Dev @ {new Date().getFullYear()}</Nav>\r\n                        <Nav >\r\n                            <div>\r\n                                <a href=\"https://github.com/FDuarte-Dev\">\r\n                                    <FontAwesomeIcon icon={faGithubSquare} size=\"2x\" />\r\n                                </a>\r\n                                <a href=\"https://www.linkedin.com/in/fernando-guerra-duarte/\">\r\n                                    <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n                                </a>\r\n                            </div>\r\n                        </Nav>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FooterNavBar from '../../components/FooterNavBar'\r\n\r\nclass FooterManagerComp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <FooterNavBar />\r\n        )\r\n    }\r\n}\r\n\r\nexport const FooterManager = connect()(FooterManagerComp);","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HeaderManager from './modules/Header/manager/index';\nimport PageManager from './modules/Page/manager/index';\nimport FooterManager from './modules/Footer/manager/index';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <HeaderManager />\n      <PageManager />\n      <FooterManager />\n    </div>\n  </Provider>\n);\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}